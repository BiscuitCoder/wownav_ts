<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= config.title %>
    </title>
    <meta name="description" content="<%= config.description %>">
    <meta name="keywords" content="<%= config.keywords %>">
    <link rel="icon" href="<%= config.icon %>">
    <meta name="theme-color" content="<%= config.themeColor %>">
    <meta name="apple-mobile-web-app-status-bar-style" content="<%= config.themeColor %>">
    <meta name="msapplication-navbutton-color" content="<%= config.themeColor %>">
    <style>
         :root {
            --theme-color: <%=config.themeColor %>;
            --theme-rgb: <%=config.themeColor.startsWith('#') ? `$ {
                parseInt(config.themeColor.slice(1, 3), 16)
            }
            ,
            $ {
                parseInt(config.themeColor.slice(3, 5), 16)
            }
            ,
            $ {
                parseInt(config.themeColor.slice(5, 7), 16)
            }
            `: '0, 0, 0' %>;
            --bg-color: #f8f9fa;
            --card-bg: #ffffff;
            --hover-bg: #f5f7f9;
            --text-color: #333;
            --secondary-text: #6c757d;
            --tertiary-text: #9ca3af;
            --border-color: #eaecef;
            --theme-gradient: linear-gradient(to bottom, <%=config.themeColor %>25, <%=config.themeColor %>10 30%, <%=config.themeColor %>03 60%, var(--bg-color) 80%);
            --theme-gradient-mobile: radial-gradient(ellipse at top center, <%=config.themeColor %>25, <%=config.themeColor %>10 30%, <%=config.themeColor %>03 60%, var(--bg-color) 80%);
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: var(--bg-color);
            color: var(--text-color);
            min-height: 100vh;
            position: relative;
        }
        
        .menu-toggle {
            display: none;
            position: fixed;
            top: 16px;
            right: 16px;
            width: 40px;
            height: 40px;
            background: var(--theme-color);
            border-radius: 50%;
            z-index: 1000;
            cursor: pointer;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 20px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
        }
        
        .mobile-header {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            height: 60px;
            background: var(--card-bg);
            border-bottom: 1px solid var(--border-color);
            z-index: 1000;
            padding: 0 16px;
            box-sizing: border-box;
            align-items: center;
            justify-content: space-between;
        }
        
        .mobile-logo-container {
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .mobile-logo {
            height: 24px;
            width: auto;
        }
        
        .mobile-site-title {
            font-size: 1.1em;
            color: var(--theme-color);
            margin: 0;
            font-weight: 600;
        }
        
        .mobile-menu-toggle {
            width: 36px;
            height: 36px;
            background: var(--theme-color);
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 18px;
            cursor: pointer;
            border: none;
        }
        
        .sidebar {
            width: 200px;
            background: var(--card-bg);
            padding: 20px 0;
            border-right: 1px solid var(--border-color);
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            box-sizing: border-box;
            transition: transform 0.3s ease;
            z-index: 100;
        }
        
        .logo-container {
            padding: 0 24px 20px;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .logo {
            height: 32px;
            width: auto;
            margin-bottom: 0;
        }
        
        .site-title {
            font-size: 1.2em;
            color: var(--theme-color);
            margin: 0;
            font-weight: 600;
            display: block;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 100%;
        }
        
        .category-menu {
            list-style: none;
            padding: 0;
            margin: 0;
            width: 100%;
        }
        
        .category-menu li {
            padding: 10px 24px;
            cursor: pointer;
            transition: all 0.2s ease;
            color: var(--secondary-text);
            font-size: 14px;
            display: block;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            width: 100%;
            box-sizing: border-box;
        }
        
        .category-menu li:hover {
            background: var(--hover-bg);
            color: var(--theme-color);
        }
        
        .category-menu li.active {
            background: var(--hover-bg);
            color: var(--theme-color);
            font-weight: 500;
        }
        
        .main-content {
            flex: 1;
            margin-left: 200px;
            padding: 40px;
            min-width: 1200px;
            max-width: calc(100% - 200px);
            position: relative;
            z-index: 3;
        }
        
        .intro-section {
            margin-bottom: 40px;
            padding: 24px;
            background: var(--card-bg);
            border-radius: 12px;
            border: 1px solid var(--border-color);
        }
        
        .intro-section p {
            margin: 0;
            color: var(--secondary-text);
            font-size: 14px;
            line-height: 1.6;
        }
        
        .search-section {
            margin-bottom: 40px;
        }
        
        .search-container {
            position: relative;
            max-width: 600px;
            margin: 0 auto;
        }
        
        .search-input {
            width: 100%;
            padding: 12px 16px;
            padding-left: 40px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            font-size: 14px;
            background: var(--card-bg);
            color: var(--text-color);
            transition: all 0.2s ease;
            box-sizing: border-box;
        }
        
        .search-input:focus {
            outline: none;
            border-color: var(--theme-color);
            box-shadow: 0 0 0 3px rgba(var(--theme-rgb), 0.1);
        }
        
        .search-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--secondary-text);
            pointer-events: none;
        }
        
        .no-results {
            text-align: center;
            padding: 40px 0;
            color: var(--secondary-text);
            font-size: 14px;
            display: none;
        }
        
        .category-section {
            margin-bottom: 40px;
        }
        
        .category-title {
            font-size: 24px;
            margin-bottom: 24px;
            color: var(--text-color);
            font-weight: 600;
        }
        
        .nav-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 16px;
        }
        
        .nav-item {
            display: flex;
            padding: 16px;
            background: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            text-decoration: none;
            transition: all 0.2s ease;
            align-items: center;
            gap: 12px;
        }
        
        .nav-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            border-color: var(--theme-color);
        }
        
        .nav-item-icon {
            position: relative;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            color: var(--theme-color);
            background: linear-gradient(135deg, rgba(var(--theme-rgb), 0.15), rgba(var(--theme-rgb), 0.1));
            border-radius: 6px;
            flex-shrink: 0;
            box-shadow: 0 2px 4px rgba(var(--theme-rgb), 0.1);
        }
        
        .nav-item-icon img {
            width: 24px;
            height: 24px;
            border-radius: 6px;
        }
        
        .nav-item-icon span {
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, rgba(var(--theme-rgb), 0.15), rgba(var(--theme-rgb), 0.1));
            border-radius: 6px;
            color: var(--theme-color);
            font-size: 13px;
            font-weight: 600;
            text-transform: uppercase;
            box-shadow: 0 2px 4px rgba(var(--theme-rgb), 0.1);
        }
        
        .nav-item-content {
            flex: 1;
            min-width: 0;
        }
        
        .nav-item-title {
            color: var(--text-color);
            font-weight: 500;
            margin: 0 0 4px;
            font-size: 14px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        .nav-item-url {
            color: var(--tertiary-text);
            font-size: 12px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        .footer {
            margin-top: 60px;
            padding: 20px 0;
            text-align: center;
            color: var(--secondary-text);
            font-size: 14px;
            border-top: 1px solid var(--border-color);
        }
        
        @media (max-width: 768px) {
            .mobile-header {
                display: flex;
            }
            .menu-toggle {
                display: none;
            }
            .sidebar {
                top: 60px;
                height: calc(100vh - 60px);
                width: 240px;
                transform: translateX(-100%);
                box-shadow: 2px 0 8px rgba(0, 0, 0, 0.1);
            }
            .sidebar.active {
                transform: translateX(0);
            }
            .main-content {
                margin-left: 0;
                padding: 20px;
                width: 100%;
                box-sizing: border-box;
                min-width: 100%;
                max-width: 100%;
                margin-top: 60px;
            }
            body {
                display: block;
            }
            .logo-container {
                display: none;
            }
            .nav-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 12px;
            }
            .category-title {
                font-size: 20px;
                margin-bottom: 16px;
            }
            .nav-item {
                padding: 12px;
                min-width: 0;
            }
            .nav-item-title {
                font-size: 13px;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }
            .nav-item-url {
                font-size: 11px;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }
            .nav-item-icon {
                flex-shrink: 0;
            }
            .nav-item-content {
                min-width: 0;
            }
            .theme-gradient {
                height: 300px;
                opacity: 0.8;
            }
        }
        /* 返回顶部按钮 */
        
        .back-to-top {
            position: fixed;
            right: 20px;
            bottom: 20px;
            width: 40px;
            height: 40px;
            background: var(--theme-color);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            opacity: 0;
            transition: opacity 0.3s;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
            z-index: 1000;
        }
        
        .back-to-top.visible {
            opacity: 1;
        }
        
        .icon-placeholder {
            position: absolute;
            width: 24px;
            height: 24px;
            border-radius: 6px;
        }
        
        .lazy {
            opacity: 0;
            transition: opacity 0.3s;
        }
        
        .lazy.loaded {
            opacity: 1;
        }
        
        .theme-gradient {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 500px;
            background: var(--theme-gradient);
            pointer-events: none;
            z-index: 0;
            opacity: 0.9;
        }
        
        @media screen and (max-width: 768px) {
            .theme-gradient {
                height: 300px !important;
                opacity: 0.8 !important;
            }
        }
    </style>
</head>

<!-- Dividing -->

<body>
    <div class="theme-gradient"></div>
    <div class="mobile-header">
        <div class="mobile-logo-container">
            <img src="<%= config.logo %>" alt="<%= config.title %>" class="mobile-logo" onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
            <h1 class="mobile-site-title" style="display: none;">
                <%= config.title %>
            </h1>
        </div>
        <button class="mobile-menu-toggle" onclick="toggleMenu()">☰</button>
    </div>
    <div class="sidebar">
        <div class="logo-container">
            <img src="<%= config.logo %>" alt="<%= config.title %>" class="logo" onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
            <h1 class="site-title" style="display: none;">
                <%= config.title %>
            </h1>
        </div>
        <ul class="category-menu">
            <% for (const category of config.navs) { %>
                <li onclick="scrollToCategory('<%= category.category %>')">
                    <%= category.category %>
                </li>
                <% } %>
        </ul>
    </div>

    <div class="main-content">

        <div class="search-section">
            <div class="search-container">
                <div class="search-icon">🔍</div>
                <input type="text" id="searchInput" class="search-input" placeholder="搜索导航...">
            </div>
        </div>

        <div class="no-results">
            未找到相关导航
        </div>

        <% for (const category of config.navs) { %>
            <div class="category-section" id="<%= category.category %>">
                <h2 class="category-title">
                    <%= category.category %>
                </h2>
                <div class="nav-grid">
                    <% 
                    const sortedNavs = [...category.navs].sort((a, b) => (b.sort || 0) - (a.sort || 0));
                    for (const nav of sortedNavs) { 
                    %>
                        <a href="<%= nav.url %>" class="nav-item" target="_blank">
                            <div class="nav-item-icon">
                                <%
                                let domain = '';
                                let clearbitLogoUrl = '';
                                try {
                                    const url = new URL(nav.url);
                                    domain = url.hostname;
                                    clearbitLogoUrl = `https://logo.clearbit.com/${domain}`;
                                } catch (e) {
                                    domain = nav.url.replace(/^https?:\/\//, '').split('/')[0];
                                    clearbitLogoUrl = `https://logo.clearbit.com/${domain}`;
                                }
                                // 获取第一个非特殊字符并转大写，如果没有则使用默认值
                                const firstChar = (nav.name || '~').replace(/[^a-zA-Z0-9\u4e00-\u9fa5]/g, '').charAt(0) || 'N';
                                %>
                                    <img src="<%= clearbitLogoUrl %>" alt="<%= nav.name || '导航' %>" width="24" height="24" onerror="this.onerror=null; this.style.display='none'; this.nextElementSibling.style.display='flex';" class="lazy" data-src="<%= clearbitLogoUrl %>">
                                    <span style="display: none; width: 24px; height: 24px; align-items: center; justify-content: center; background: linear-gradient(135deg, var(--theme-color)80, var(--theme-color)40); border-radius: 6px; color: var(--theme-color); font-size: 13px; font-weight: 600; text-transform: uppercase; box-shadow: 0 2px 4px var(--theme-color)20;"><%= firstChar %></span>
                            </div>
                            <div class="nav-item-content">
                                <h3 class="nav-item-title">
                                    <%= nav.name %>
                                </h3>
                                <div class="nav-item-url">
                                    <%= nav.url.replace(/^https?:\/\//, '') %>
                                </div>
                            </div>
                        </a>
                        <% } %>
                </div>
            </div>
            <% } %>

                <div class="footer">
                    <p>
                        <%= config.about %>
                    </p>
                    <!-- <p>
                        <%= config.contact %>
                    </p> -->
                </div>
    </div>

    <div class="back-to-top" onclick="window.scrollTo({top: 0, behavior: 'smooth'})">↑</div>

    <!-- Dividing -->

    <script>
        // 平滑滚动到指定分类
        function scrollToCategory(categoryId) {
            const element = document.getElementById(categoryId);
            if (element) {
                element.scrollIntoView({
                    behavior: 'smooth'
                });

                // 更新活动状态
                document.querySelectorAll('.category-menu li').forEach(item => {
                    item.classList.remove('active');
                    if (item.textContent === categoryId) {
                        item.classList.add('active');
                    }
                });
            }
        }

        // 监听滚动，更新侧边栏活动状态和返回顶部按钮
        window.addEventListener('scroll', () => {
            const sections = document.querySelectorAll('.category-section');
            const menuItems = document.querySelectorAll('.category-menu li');
            const backToTop = document.querySelector('.back-to-top');

            // 更新返回顶部按钮显示状态
            if (window.scrollY > 300) {
                backToTop.classList.add('visible');
            } else {
                backToTop.classList.remove('visible');
            }

            // 更新当前分类高亮
            let currentSection = '';
            sections.forEach(section => {
                const sectionTop = section.offsetTop;
                if (window.scrollY >= (sectionTop - 100)) {
                    currentSection = section.id;
                }
            });

            menuItems.forEach(item => {
                item.classList.remove('active');
                if (item.textContent === currentSection) {
                    item.classList.add('active');
                }
            });
        });

        // 图标懒加载处理
        document.addEventListener('DOMContentLoaded', function() {
            const imageObserver = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const img = entry.target;
                        const placeholder = img.previousElementSibling;

                        // 开始加载图片
                        img.src = img.dataset.src;

                        // 图片加载成功
                        img.onload = function() {
                            img.classList.add('loaded');
                            if (placeholder) {
                                placeholder.style.display = 'none';
                            }
                        };

                        // 图片加载失败
                        img.onerror = function() {
                            this.onerror = null;
                            this.style.display = 'none';
                            const placeholder = this.previousElementSibling;
                            if (placeholder && placeholder.classList.contains('icon-placeholder')) {
                                placeholder.style.display = 'flex';
                                placeholder.style.alignItems = 'center';
                                placeholder.style.justifyContent = 'center';
                                placeholder.style.color = getComputedStyle(document.documentElement).getPropertyValue('--theme-color');
                                placeholder.style.fontSize = '13px';
                                placeholder.style.fontWeight = '600';
                                placeholder.textContent = (this.alt || 'N').charAt(0).toUpperCase();
                            }
                            const span = this.nextElementSibling;
                            if (span) {
                                span.style.display = 'flex';
                            }
                        };

                        observer.unobserve(img);
                    }
                });
            }, {
                rootMargin: '50px 0px',
                threshold: 0.01
            });

            // 为每个图标添加占位符和观察者
            document.querySelectorAll('.nav-item-icon').forEach(iconContainer => {
                const img = iconContainer.querySelector('img.lazy');
                if (img) {
                    // 添加占位符
                    const placeholder = document.createElement('div');
                    placeholder.className = 'icon-placeholder';
                    // 使用行内样式设置渐变背景
                    placeholder.style.background = `linear-gradient(135deg, ${getComputedStyle(document.documentElement).getPropertyValue('--theme-color')}80, ${getComputedStyle(document.documentElement).getPropertyValue('--theme-color')}40)`;
                    placeholder.style.boxShadow = `0 2px 4px ${getComputedStyle(document.documentElement).getPropertyValue('--theme-color')}20`;
                    iconContainer.insertBefore(placeholder, img);

                    // 观察图片
                    imageObserver.observe(img);
                }
            });
        });

        // 添加菜单切换功能
        function toggleMenu() {
            const sidebar = document.querySelector('.sidebar');
            sidebar.classList.toggle('active');
        }

        // 点击内容区域时关闭菜单
        document.querySelector('.main-content').addEventListener('click', function() {
            if (window.innerWidth <= 768) {
                const sidebar = document.querySelector('.sidebar');
                sidebar.classList.remove('active');
            }
        });

        // 点击菜单项后自动关闭菜单（移动端）
        document.querySelectorAll('.category-menu li').forEach(item => {
            item.addEventListener('click', function() {
                if (window.innerWidth <= 768) {
                    const sidebar = document.querySelector('.sidebar');
                    sidebar.classList.remove('active');
                }
            });
        });

        // 添加访问记录
        function addToHistory(title, url) {
            const history = localStorage.getItem('navHistory');
            const historyData = history ? JSON.parse(history) : [];

            const currentSite = {
                title: title,
                url: url,
                timestamp: Date.now()
            };

            // 检查是否已存在相同URL的记录
            const existingIndex = historyData.findIndex(item => item.url === currentSite.url);
            if (existingIndex !== -1) {
                // 更新已存在记录的时间戳
                historyData[existingIndex].timestamp = currentSite.timestamp;
            } else {
                // 添加新记录
                historyData.push(currentSite);
            }

            // 限制历史记录数量为100条
            if (historyData.length > 100) {
                historyData.sort((a, b) => b.timestamp - a.timestamp);
                historyData.length = 100;
            }

            localStorage.setItem('navHistory', JSON.stringify(historyData));
        }

        // 页面加载完成后初始化
        document.addEventListener('DOMContentLoaded', function() {
            // 添加主题渐变背景
            const gradient = document.createElement('div');
            const themeColor = getComputedStyle(document.documentElement).getPropertyValue('--theme-color').trim();
            gradient.className = 'theme-gradient';
            document.body.insertBefore(gradient, document.body.firstChild);

            // 为所有导航链接添加点击事件
            document.querySelectorAll('.nav-item').forEach(item => {
                item.addEventListener('click', function(e) {
                    const title = this.querySelector('.nav-item-title').textContent.trim();
                    const url = this.querySelector('.nav-item-url').textContent.trim();
                    addToHistory(title, url);
                });
            });

            // 添加搜索框事件监听
            const searchInput = document.getElementById('searchInput');
            if (searchInput) {
                searchInput.addEventListener('input', debouncedSearch);
            }
        });

        // 搜索功能
        function searchSites() {
            const searchInput = document.getElementById('searchInput');
            const searchText = searchInput.value.toLowerCase();
            const navItems = document.querySelectorAll('.nav-item');
            const noResults = document.getElementById('noResults');
            let hasResults = false;

            navItems.forEach(item => {
                const title = item.querySelector('.nav-item-title').textContent.toLowerCase();
                const url = item.querySelector('.nav-item-url').textContent.toLowerCase();
                const isVisible = title.includes(searchText) || url.includes(searchText);
                item.style.display = isVisible ? 'flex' : 'none';
                if (isVisible) hasResults = true;
            });

            noResults.style.display = hasResults ? 'none' : 'block';
        }

        // 添加防抖
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // 使用防抖处理搜索
        const debouncedSearch = debounce(searchSites, 300);
    </script>
</body>

</html>